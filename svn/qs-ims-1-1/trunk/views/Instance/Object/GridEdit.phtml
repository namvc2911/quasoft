<style>

.grid .editor
{
border-color: blue;
width: auto;
margin:0px !important;
}
.grid .lookup
{
border-color: blue;
width: auto;
margin:0px !important;
}
.grid .combo
{
border-color: blue;
width: auto;
margin:0px !important;
}
.grid .date
{
border-color: blue;
position: absolute;
width: auto;
margin:0px !important;
}
.grid div
{
border-color: blue;
}
.select-grid
{
position:absolute;
left:0px;
height:20px;
width: 20px;
background-color: green;
}
.select-grid span
{
float: right;
height:20px;
width: 20px;
cursor: pointer;
}
</style>
<script type="text/javascript">
$(document).ready(function() {
	rowCLK(document.getElementById($.cookie('object_selected')));
	var height = $(window).height() - 200 - $('#grid thead').height();//-8
	$('#grid').tableScroll({height:height,width:'100%'});
	$('#grid').click(function(event){
		//grid_editing = true;
	    //event.stopPropagation();
	});
});
edit = false;
var combo = {};
var gotoioid = 0;
</script>
<?php $cfield = new Qss_Model_CField();?>
<?php $groupbys = $this->groupby;?>
<?php $totalWidth = 0;?>
<?php foreach ($this->fields as $field):?>
	<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
		<?php $totalWidth += $field->szRefLabel;?>	
	<?php endif;?>
<?php endforeach;?>

<?php $c = 1?>
<?php $totalPercent = 0?>
<?php foreach ($this->fields as $field):?>
	<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
		<?php $columnWidth = 0;?>
		<?php if($totalWidth):?>
			<?php if($c%2==0):?>
				<?php $columnWidth = ceil(($field->szRefLabel/$totalWidth)*97*100)/100;?>
			<?php else:?>
				<?php $columnWidth = floor(($field->szRefLabel/$totalWidth)*97*100)/100;?>
			<?php endif;?>
		<?php endif;?>
		<?php $last = $field;?>
		<?php $field->columnWidth = $columnWidth?>
		<?php $totalPercent += $columnWidth?>
		<?php $c++?>	
	<?php endif;?>
<?php endforeach;?>
<?php if($totalPercent):?>
	<?php $last->columnWidth += 97 - $totalPercent?>
<?php endif;?>
<?php foreach($groupbys as $groupby):?>
	<?php ${'groupbyvalue_'.$groupby} = '';?>
<?php endforeach;?>
<table id="grid" cellspacing="0" class="grid grid_edit" >
<thead>
	<tr>
		<?php for($j = 0;$j < count($groupbys) -1;$j++):?>
			<th width="1%" style="border-right:0px;">&nbsp;</th>
		<?php endfor;?>
		<th width="3%" style="border-left: 1px solid rgb(204, 204, 204);">
			<input type="checkbox" onchange="toggleGridCheckbox(this)">
		</th>
		<?php foreach ($this->fields as $field):?>
		<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
		<th <?php if($field->bReadOnly):?>readonly=1<?php endif;?> class="th_<?php echo $field->FieldCode?>"
			width="<?php echo $field->columnWidth?>%">


			<?php if(!$this->o_Object->b_Tree):?>
				<a href="#" onclick="rowSort('<?php echo $this->o_Object->i_IFID?>','<?php echo $this->o_Object->intDepartmentID?>','<?php echo $this->o_Object->ObjectCode?>','<?php echo $field->FieldCode?>')">
					<?php echo $field->szFieldName;?> 
					<?php if(array_key_exists($field->FieldCode,$this->orderfield)):?>
						<img border="0" src="../../images/<?php echo ($this->orderfield[$field->FieldCode]=='ASC')?'up':'down';?>.gif" />
					<?php endif;?>
				</a>
			<?php else:?>
				<?php echo $field->szFieldName;?> 
				<?php if(array_key_exists($field->FieldCode,$this->orderfield)):?>
					<img border="0" src="../../images/<?php echo ($this->orderfield[$field->FieldCode]=='ASC')?'up':'down';?>.gif" />
				<?php endif;?>
			<?php endif;?>

		</th>
		<?php endif;?>
		<?php endforeach;?>
	</tr>
</thead>
<tbody>
	<tr style="height: 0px !important;">
	<?php for($j = 0;$j < count($groupbys)-1;$j++):?>
		<td width="1%" style="height: 0px !important;"></td>
	<?php endfor;?>
	<td width="3%" style="height: 0px !important;"></td>
	<?php foreach ($this->fields as $field):?>
		<?php if ( ($field->bGrid & 1)  && !in_array($field->FieldCode,$groupbys)):?>
		<td width="<?php echo $field->columnWidth?>%" style="height: 0px !important;"></td>
		<?php endif;?>
	<?php endforeach;?>
	</tr>
	<?php $jsonRowData = $this->o_Object->getJsonData();?>
	<?php
	$form_rights = $this->form->i_fGetRights($this->user->user_group_list);
	$rights = ($form_rights & 4)?31:0;
	if(!$this->o_Object->bInsert)
		$rights = $rights & ~Qss_Lib_Const::FORM_RIGHTS_CREATE;
	if(!$this->o_Object->bEditing)
		$rights = $rights & ~Qss_Lib_Const::FORM_RIGHTS_UPDATE;
	if(!$this->o_Object->bDeleting)
		$rights = $rights & ~Qss_Lib_Const::FORM_RIGHTS_DELETE;
	$i = ($this->currentpage - 1) * $this->limit + 1;?>
	<?php $j=1;?>
	<?php foreach ($this->objects as $object):?>
	<?php
		$rowclass = '';
		$rowstyleclass = "Qss_Bin_Style_{$this->o_Object->ObjectCode}";
		if(class_exists($rowstyleclass))
		{
			$rowstyle = new $rowstyleclass($object);
			$rowclass = $rowstyle->__doExecute();
		}
	?>
	<?php
		$fields = $this->o_Object->loadFields();
		$this->o_Object->i_IOID = $object->IOID;
		$this->o_Object->i_IFID = $object->IFID;
		
		$rights = $rights & $this->o_Object->intRights;
		/*if(!$this->o_Object->bInsert)
			$rights = $rights & ~1;
		if(!$this->o_Object->bEditing)
			$rights = $rights & ~2;
		if(!$this->o_Object->bDeleting)
			$rights = $rights & ~8;*/
		?>
	<?php if(count($groupbys)):?>
		<?php $change = -1;?>
		<?php $key = 1?>
		<?php $grouplevel = array()?>
		<?php foreach ($groupbys as $groupby):?>
			<?php if($groupby != -1 && $groupby != -2):?>
				<?php $grouplevel[] = $groupby?>
				<?php $keycount = ''?>
				<?php foreach($grouplevel as $level):?>
				<?php if($keycount != ''):?>
					<?php $keycount .= '_';?>
				<?php endif;?>
				<?php $keycount .= ($object->{$level} === '')?0:$object->{$level};?>
				<?php endforeach;?>
				<?php $groupbyfield = $this->form->getFieldByCode($this->o_Object->ObjectCode,$groupby);?>
				<?php $jsonDataGroup = $groupbyfield->getJsonRegx();?>
				<?php if($change !== -1 && $key > $change):?>
					<?php ${'groupbyvalue_'.$groupby} = '';?>
				<?php endif;?>
			
				<?php if($groupbyfield && $object->{$groupbyfield->FieldCode} !== ${'groupbyvalue_'.$groupby}):?>
				<?php $change = $key;?>
				<tr>
					<?php for($j = 1;$j < $key;$j++):?>
						<td class="groupcol" >&nbsp;</td>
					<?php endfor;?>
					<td class="groupby tree_level_1 tree_close" colspan="<?php echo ($this->gridFieldCount-$key+1+in_array(-1,$groupbys)+in_array(-2,$groupbys))?>">
						<?php echo $groupbyfield->szFieldName?>: <?php if($groupbyfield->intFieldType == 10) echo Qss_Lib_Date::mysqltodisplay($object->{$groupbyfield->FieldCode}); elseif($jsonDataGroup) echo $object->{'Ref_'.$groupbyfield->FieldCode}; else echo $object->{$groupbyfield->FieldCode};?> (<?php echo @($this->{$groupby}[$keycount])?>)
					</td>
				</tr>
				<?php $i=1;?>
				<?php endif;?>
				<?php ${'groupbyvalue_'.$groupby} = $object->{$groupbyfield->FieldCode};?>				
			<?php elseif ($groupby == -1 && $this->form->i_Type == Qss_Lib_Const::FORM_TYPE_MODULE):?>
				<?php if($change !== -1 && $key > $change):?>
					<?php ${'groupbyvalue_'.$groupby} = null;?>
				<?php endif;?>
				<?php if($object->Status !== ${'groupbyvalue_'.$groupby}):?>
				<?php $change = $key;?>
				<tr>
					<?php for($j = 1;$j < $key;$j++):?>
						<td class="groupcol" >&nbsp;</td>
					<?php endfor;?>
					<td class="groupby tree_level_1 tree_close" colspan="<?php echo $this->gridFieldCount-$key+1+in_array(-1,$groupbys)+in_array(-2,$groupbys)?>">Tình trạng: <?php echo $this->arrname[$object->Status];?></td>
				</tr>
				<?php $i=1;?>
				<?php endif;?>
				<?php ${'groupbyvalue_'.$groupby} = $object->Status;?>
			<?php elseif ($groupby == -2):?>
				<?php if($change !== -1 && $key > $change):?>
					<?php ${'groupbyvalue_'.$groupby} = null;?>
				<?php endif;?>
				<?php if($object->UserName !== ${'groupbyvalue_'.$groupby}):?>
				<?php $change = $key;?>
				<tr>
					<?php for($j = 1;$j < $key;$j++):?>
						<td class="groupcol" >&nbsp;</td>
					<?php endfor;?>
					<td class="groupby tree_level_1 tree_close" colspan="<?php echo $this->gridFieldCount-$key+1+in_array(-1,$groupbys)+in_array(-2,$groupbys)?>">Người tạo: <?php echo $object->UserName;?></td>
				</tr>
				<?php $i=1;?>
				<?php endif;?>
				<?php ${'groupbyvalue_'.$groupby} = $object->UserName;?>
			<?php endif;?>
			<?php $key++?>
		<?php endforeach;?>
	<?php endif;?>
	<tr
		rights="<?php echo $rights?>"
		form_rights="<?php echo $form_rights?>"
		deptid="<?php echo $this->form->i_DepartmentID?>"
		id="<?php echo $object->IOID?>"
		ifid="<?php echo  $this->form->i_IFID?>"
		objid="<?php echo $this->o_Object->ObjectCode?>"
		status="0"
		edit="0"
		ondblclick="rowEdit(<?php echo  $this->form->i_IFID?>,<?php echo $this->form->i_DepartmentID?>,'<?php echo $this->o_Object->ObjectCode?>'); return false;"
		onclick="rowCLK(this,event);"
		<?php echo ($i % 2 == 0)?'bgcolor="#f7f9f9"':""?>
		class="<?php echo $rowclass?> grid_tr">
		<?php for($j = 0;$j < count($groupbys) - 1;$j++):?>
			<td class="groupcol"></td>
		<?php endfor;?>
		<td class="nocount"><input type="checkbox" class="grid_checkbox"></td>
		<?php $first = true;?>
		<?php foreach ($fields as $field):?>
		<?php $field->intIOID = $object->IOID?>
		<?php $field->intIFID = $this->form->i_IFID?>
		<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
		<?php $jsonData = $field->getJsonRegx();?>
			<?php $jsonCellData = $field->getJsonCell();?>
			<?php
				$rowclass = '';
				if($this->orderField == $field->FieldCode && is_array($jsonRowData))
				{
					$rowclass = isset($jsonRowData[$object->{$field->FieldCode}])?$jsonRowData[$object->{$field->FieldCode}]:'';
				}
			?>
		<?php
		$display = '';
		switch ( $field->intFieldType )
		{
            case 4:
                if($object->{$field->FieldCode}) {
                    $display = date('H:i', strtotime($object->{$field->FieldCode}));
                }
                break;
			case 17:
				$custom = "Qss_Bin_Display_{$field->ObjectCode}_{$field->FieldCode}";
				if(class_exists($custom))
				{
					$customobject = new $custom($object);
					$display = $customobject->__doExecute();
				}
				else
				{
					$custom = 'Qss_Bin_Calculate_'.$field->ObjectCode.'_'.$field->FieldCode;
					if(class_exists($custom))
					{
						$customobject = new $custom($this->o_Object);
						$display = $customobject->__doExecute();
					}
				}
				$object->{$field->FieldCode} = $display;
				break;
			case 9:
				$display = Qss_Lib_Template::Image($object->{$field->FieldCode},$field->intFieldWidth);
				break;
			case 8:
				$display = Qss_Lib_Template::FileDown($object->{$field->FieldCode},$field);
				break;
			case 10:
				$display = Qss_Lib_Date::mysqltodisplay($object->{$field->FieldCode});
				break;
			case 11:
				$cfield = new Qss_Model_CField();
				$cur = $object->{"Ref_".$field->FieldCode};
				if(!$cur || $field->intInputType == 3)
				{
					$cur = $cfield->getPrimary()->Code;
				}
				$currency = $cfield->getDataByCode($cur);
				if ( $currency)
				{
					$display = is_numeric($object->{$field->FieldCode})?number_format($object->{$field->FieldCode} / 1000, (int)$currency->Precision, $currency->DecPoint, $currency->ThousandsSep):$object->{$field->FieldCode};
					$display .= $currency->Symbol;
				}
				break;
			case 13:
				$display = Qss_Lib_Template::getBarCode($object->{$field->FieldCode},$field->szTValue,$field->szFValue);
				break;
			default:
				if($field->intFieldType != 7 || $field->intInputType == 5 || $field->intInputType == 3 )
				{
					if($jsonData)
					{
						$display = isset($jsonData[$object->{$field->FieldCode}])?$jsonData[$object->{$field->FieldCode}]:'';
					}
					else
					{
						$display = Qss_Lib_Util::textToHtml($object->{$field->FieldCode});
					}
				}
				break;
		}

		$currency = $cfield->getDataByCode($this->szValue);
		if ( $currency)
		{
			$ret = is_numeric($this->dMoney)?number_format($this->dMoney/1000, (int)$currency->Precision, $currency->DecPoint, $currency->ThousandsSep):$this->dMoney;
		}
		$colclass = '';
		$colstyleclass = "Qss_Bin_Style_{$field->ObjectCode}_{$field->FieldCode}";
		if(class_exists($colstyleclass))
		{
			$colstyle = new $colstyleclass($object);
			$colclass = $colstyle->__doExecute();
		}
		elseif(is_array($jsonCellData) && count($jsonCellData) && isset($jsonCellData[$object->{$field->FieldCode}]))
		{
			$colclass = $jsonCellData[$object->{$field->FieldCode}];
		}
		if($field->szStyle)
		{
			$colclass .= ' ' . $field->szStyle;
		}
		?>
		<td
		cache="<?php echo $field->lookupFilter;?>"
		class="data <?php if($field->intFieldType == 7 && $field->intInputType != 5) echo ($object->{$field->FieldCode}?'col-checked':'col-unchecked')?>
		<?php echo $colclass?$colclass:Qss_Lib_Const::$FIELD_ALIGN[$field->intFieldType-1]?>
		<?php if($field->bRequired):?>required<?php endif;?>"
		name="<?php echo $field->ObjectCode?>_<?php echo $field->FieldCode?>" id="<?php echo $field->FieldCode?>"
		<?php if($field->bReadOnly):?>readonly=1<?php endif;?> inputtype="<?php echo $field->intInputType?>"
		reffid="<?php echo $field->RefFormCode?>" refobjid="<?php echo $field->RefObjectCode?>"
		reffieldid="<?php echo $field->RefFieldCode?>"
		refresh="<?php echo $field->isRefresh?>"
		default="<?php echo $field->szDefaultVal?>"
		<?php if($field->intInputType == 5 || $field->intFieldType == 15):?>
		value="<?php echo $object->{$field->FieldCode}?>"
		<?php elseif($field->intInputType == 3 || $field->intInputType == 4):?>
		value="<?php echo $object->{"Ref_".$field->FieldCode}?>"
		<?php endif;?>
		dwidth="<?php echo $field->intFieldWidth?>"><?php if($this->o_Object->b_Tree):?><span <?php if(($object->rgt-$object->lft) > 1):?>onclick="cellTree(this);"<?php endif;?> class="<?php if($first):?>tree_level_<?php echo $object->level?> <?php if($object->close):?>tree_close<?php elseif($object->rgt-$object->lft > 1):?>tree_open<?php else:?>tree_last<?php endif;?><?php endif;?>"></span><?php endif;?><?php if($field->intFieldType != 7 || $field->intInputType == 5 ):?><?php echo $display;?><?php endif;?></td>
			<?php endif;?>
		<?php $first = false;?>
		<?php endforeach;?>
	</tr>
	<?php if(!$this->o_Object->b_Tree || $object->level == 1):?>
		<?php $i++;?>
	<?php endif;?>
	<?php $j++;?>
	<?php endforeach;?>

	<?php if(($rights & 1) && !count($this->objects)):?>
	<tr class="font-weight: 400; color: black;"
		rights="13"
		deptid="<?php echo $this->form->i_DepartmentID?>"
		id="0"
		edit="-1"
		ifid="<?php echo  $this->form->i_IFID?>"
		objid="<?php echo $this->o_Object->ObjectCode?>"
		status="0"
		onclick="rowCLK(this,event);">
		<td class="nocount">*</td>
		<?php $fields = $this->o_Object->loadFields();?>
		<?php foreach ($fields as $field):?>
		<?php //if($field->intFieldType == 17){$field->bReadOnly = true;};?>
		<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
		<td
		cache="<?php echo $field->lookupFilter;?>"
		class="data <?php echo Qss_Lib_Const::$FIELD_ALIGN[$field->intFieldType-1]?> <?php if($field->intFieldType == 7) echo ($field->getValue()?'col-checked':'col-unchecked')?>
		<?php if($field->bRequired):?>required<?php endif;?>"
		name="<?php echo $field->ObjectCode?>_<?php echo $field->FieldCode?>" id="<?php echo $field->FieldCode?>"
		<?php if($field->bReadOnly):?>readonly=1<?php endif;?> inputtype="<?php echo $field->intInputType?>"
		reffid="<?php echo $field->RefFormCode?>" refobjid="<?php echo $field->RefObjectCode?>"
		reffieldid="<?php echo $field->RefFieldCode?>"
		refresh="<?php echo $field->isRefresh?>"
		default="<?php echo $field->szDefaultVal?>"
		dwidth="<?php echo $field->intFieldWidth?>"><?php if($field->intFieldType != 7 || $field->intInputType == 5 ):?><?php echo $field->sz_fGetDisplay(false);?><?php endif;?></td>
			<?php endif;?>
		<?php endforeach;?>
	</tr>
	<?php endif;?>
</tbody>
<tfoot>
	<tr>
		<?php for($j = 0;$j < count($groupbys)-1;$j++):?>
			<th class="groupcol"></th>
		<?php endfor;?>
		<th width="3%" style="border-left: 1px solid rgb(204, 204, 204);"></th>
		<?php foreach ($this->fields as $field):?>
			<?php if ( ($field->bGrid & 1) && !in_array($field->FieldCode,$groupbys)):?>
				<?php if($field->AFunction):?>
				 	<?php  $field->setValue($this->o_Object->getAgregrate($field,$this->sql))?>
				 	<th><?php echo $field->sz_fGetDisplay()?></th>
				<?php else:?>
					<th>&nbsp;</th>
				<?php endif;?>
			<?php endif;?>
		<?php endforeach;?>
	</tr>
</tfoot>
</table>
<script>
$("tr").on('change',function() {
	if(edit && $(this).attr('edit') != 1){
		$(this).attr('edit',1);
	}
});
</script>
<script>
function cellTree(el) {
	if(!edit){
		$('#qss_<?php echo $this->o_Object->ObjectCode?>_tree').val($(el).parent().parent().attr('id'));
		rowObjectSearch($(el).parent().parent().attr('ifid'),$(el).parent().parent().attr('deptid'),$(el).parent().parent().attr('objid'));
	}
}

function editAllRow(){
	var promise = [];
	var el = $('.grid_edit').find('tr').eq(1);
	if($(el).attr('rights') & 4){
		$(el).children('td').each(function(){
			var p = editCell(this);
			promise.push(p);
		});
	}
	$.when.apply($, promise).done(function(){
		$('.grid_edit').find('tr').each(function(){
			if($(this).attr('id') !== undefined && $(this).index() > 1){
				editRow(this);
			}
		});
	});
}
function editSelectedRow(){
	if(row != null){
		editRow(row);
	}
	else{
		if($('.grid_selected').length){
			var promise = [];
			var el = $('.grid_selected').first();
			if($(el).attr('rights') & 4){
				$(el).children('td').each(function(){
					var p = editCell(this);
					promise.push(p);
				});
			}
			$.when.apply($, promise).done(function(){
				$('.grid_selected').each(function(idx){
					if($(this).attr('id') !== undefined && idx > 0){
						editRow(this);
					}
				});
			});
		}
	}
}
function editRow(el){
	if($(el).attr('rights') & 4){
		$(el).children('td').each(function(){
			editCell(this);
		});
		$(el).children('td:nth-child(2)').find('textarea').focus();
		$(el).children('td:nth-child(2)').find('select').focus();
		$(el).children('td:nth-child(2)').find('input').focus();
		//row = el;
		rowCLK(el);//vừa gắn vùa chọn
	}
}
function insertRow(){
	//var row = $('.grid_edit').find('tr:last');
	if (row == null) {
		row = $('.grid_edit').find('tr:last');
	}
	if($(row).index() == 0){
		return;
	}
	if($(row).attr('id')==0 && $(row).attr('edit') == -1){
		$(row).attr('edit',0)
		var newrow = row;
	}
	else{
		var newrow = $(row).clone().insertAfter(row);
		$(newrow).on('change',function() {
			if(edit && $(this).attr('edit') != 1){
				$(this).attr('edit',1);
			}
		});
	}
	$(newrow).attr('id',0);
	$(newrow).attr('rights',13);
	$(newrow).find('td').each(function(){
		$(this).attr('readonly',$('.th_'+$(this).attr('id')).attr('readonly'));
		//neu co custom button thì cho hien thi luon
		if($(this).find('button').length == 0 && $(this).attr('default') != 'KEEP'){
			$(this).text('');	
		}
		else{
			$(this).find('button.custom-button-field').prop('disabled',true);
		}
		if($(this).attr('default') != 'KEEP'){
			$(this).removeAttr('value');
		}
		if($(this).attr('default') == 'KEEP'){
			var idx = $(this).index();
			if($(row).children('td:eq('+idx+')').find('textarea').val() !== undefined){
				$(this).text($(row).children('td:eq('+idx+')').find('textarea').val());	
			}
			if($(row).children('td:eq('+idx+')').find('input').val() !== undefined){
				$(this).text($(row).children('td:eq('+idx+')').find('input').val());	
			}
		}
		else if($(this).attr('default') != 'AUTO' && $(this).attr('default') !== undefined && $(this).attr('default') != ''){
			$(this).text($(this).attr('default'));
		}
		if($(this).hasClass('col-checked')){
			$(this).removeClass('col-checked');	
			$(this).addClass('col-unchecked');
		}
	});
	$(newrow).find('.nocount').text('*');
	$('#view').scrollTop($(newrow).position().top);
	$('.tablescroll_wrapper').scrollTop($(newrow).position().top);
	editRow(newrow);
}
function displayRow(row){
	$(row).children('td').each(function(){
		displayCell(this);
	});
}
function getRow(row,retval){
	//var retval = {};
	var val = false;
	$(row).children('td').each(function(){
		val = getCell(this);
		if(val !== false){
			retval[$(this).attr('name')] = val;
		}
	});
	return retval;
}
function cancelRow(){
	var tr = $('.grid_edit').find('tr:last');
	rowObjectSearch($(tr).attr('ifid'),$(tr).attr('deptid'),$(tr).attr('objid'));
}
function editCell(cell){
	if($(cell).is('[readonly]')){
		return;
	}
	if($(cell).hasClass('nocount')){
		return;
	}
	var width = $(cell).width() - 4;
	var height = $(cell).height() - 4;
	var text = $(cell).text();
	$(cell).text('');
	var inputtype = parseInt($(cell).attr('inputtype'));
	switch(inputtype ){
	case 1:
	case 2:
		var ctrl = $('<textarea/>').addClass('editor');
		$(cell).append(ctrl);
		ctrl.css('height',height);
		ctrl.css('width',width);
		$(ctrl).val(qssAjax.br2nl(text));
		$(ctrl).focus(function(){
	    	$(this).select();
		});
		//$(ctrl).focus();
		break;
	case 9:
		//$(cell).text('');
		var checked = $(cell).hasClass('col-checked');
		var ctrl = $('<input/>').attr({ type: 'checkbox'});
		if(checked){
			$(ctrl).attr('checked',true);
			}
		$(cell).append(ctrl);
		break;
	case 8:
		//$(cell).text('');
		var ctrl = $('<input/>').css('height',height-2)
								.addClass('editor');
		$(cell).append(ctrl);
		$(ctrl).datepicker();
		$(ctrl).datepicker('option', {dateFormat: 'dd-mm-yy',showOn:'focus'});
		$(ctrl).val(text);
		//$(ctrl).datepicker('show');
		ctrl.css('width','95%');
		$('#ui-datepicker-div').click(function(event){
			//grid_editing = true;
			event.stopPropagation();
		});
		break;
	case 5:
		var ctrl = $('<select/>').addClass('combo');
		$(ctrl).attr('id','combo_' + $(cell).attr('id'))
									.css('height',height);
		$(cell).append(ctrl);
		ctrl.css('width',width);
		var url = sz_BaseUrl + '/user/field/option';
		var tr = $(cell).parent();
		var data = {fieldid:$(cell).attr('id'),selected:$(cell).attr('value')};
		data['ifid'] = $(tr).attr('ifid');
		data['deptid'] = $(tr).attr('deptid');
		data['objid'] = $(tr).attr('objid');
		data['ioid'] = $(tr).attr('id');
		$(tr).find('td').each(function(){
			data[$(this).attr('name')] = $(this).attr('value');
		});
		var option = null;
		if($(cell).attr('cache') == 1){
			option = combo['combo_'+$(cell).attr('id')];
		}
		if(option != null && option !== undefined){
			$(cell).find('#combo_' + $(cell).attr('id')).html(option);
			$(cell).find('#combo_' + $(cell).attr('id')).val($(cell).attr('value'));
		}
		else{
			return qssAjax.getHtml(url, data, function(jreturn) {
				$(cell).find('#combo_' + $(cell).attr('id')).html(jreturn);
				combo['combo_'+$(cell).attr('id')] = jreturn;
				$(cell).find('select').change(function(){
					var val = $(this).val();
					$(cell).attr('value',val);
					if ($(cell).attr('refresh') == 1) {
						refresh($(cell).parent()[0]);
					}
				});
			});
		}
		$(ctrl).change(function(){
			var val = $(this).val();
			$(cell).attr('value',val);
			if ($(cell).attr('refresh') == 1) {
				refresh($(cell).parent()[0]);
			}
		});
		$(ctrl).focus();
		break;	
	case 3:
		var ctrl = $('<select/>').addClass('combo');
		$(ctrl).attr('id','combo_' + $(cell).attr('id'))
									.css('height',height);
		$(cell).append(ctrl);
		ctrl.css('width',width);
		var url = sz_BaseUrl + '/user/field/option';
		var tr = $(cell).parent();
		var data = {fieldid:$(cell).attr('id'),selected:$(cell).attr('value')};
		data['ifid'] = $(tr).attr('ifid');
		data['deptid'] = $(tr).attr('deptid');
		data['objid'] = $(tr).attr('objid');
		data['ioid'] = $(tr).attr('id');
		$(tr).find('td').each(function(){
			data[$(this).attr('name')] = $(this).attr('value');
		});
		var option = null;
		if($(cell).attr('cache') == 1){
			option = combo['combo_'+$(cell).attr('id')];
		}
		if(option != null && option !== undefined){
			$(cell).find('#combo_' + $(cell).attr('id')).html(option);
			$(cell).find('#combo_' + $(cell).attr('id')).val($(cell).attr('value'));
		}
		else{
			return qssAjax.getHtml(url, data, function(jreturn) {
				$(cell).find('#combo_' + $(cell).attr('id')).html(jreturn);
				combo['combo_'+$(cell).attr('id')] = jreturn;
				$(cell).find('select').change(function(){
					var val = $(this).val();
					$(cell).attr('value',val);
					if ($(cell).attr('refresh') == 1) {
						refresh($(cell).parent()[0]);
					}
				});
			});
		}
		$(ctrl).change(function(){
			var val = $(this).val();
			$(cell).attr('value',val);
			if ($(cell).attr('refresh') == 1) {
				refresh($(cell).parent()[0]);
			}
		});
		$(ctrl).focus();
		break;
	case 4:
		var ctrl = $('<input/>').addClass('lookup');
		var parent = $('<div/>').addClass('tag-div');
		$(parent).append(ctrl);
		$(cell).append(parent);
		$(ctrl).attr('id','lookup_' + $(cell).attr('id')+'_'+$(cell).parent().index())
									.css('height',height)
									.css('width',width-2);
		$(ctrl).val(text);
		$(ctrl).focus(function(){
	    	$(this).select();
		});
		$(ctrl).change(function(){
			if($(this).val() != ''){
				$(this).addClass('bgpink'); 
			} 
			else {
				$(this).removeClass('bgpink');
			}
		});
		//$(ctrl).focus();
		var tr = $(cell).parent();
		var data = {ifid:$(tr).attr('ifid'),deptid:$(tr).attr('deptid'),objid:$(tr).attr('objid'),ioid:$(tr).attr('id')};
		$(tr).find('td').each(function(){
			data[$(this).attr('name')] = $(this).attr('value');
		});
		data = $.param(data);
		$(function () {
			var url = sz_BaseUrl + '/user/field/tag?fieldid='+$(cell).attr('id');
			$(cell).find('#lookup_' + $(cell).attr('id')+'_'+$(cell).parent().index()).tagSuggest({
		        url: url,
		        data: data,
		        icon: false,
		        delay: 500,
		        separator : '*',
		        tagContainer: 'div',
		        callback: selecting,
		        element: '#lookup_' + $(cell).attr('id')+'_'+$(cell).parent().index()
		    });
		});
		break;
	case 11:
		//popupSelect(cell);
		break;
	case 12:
		//popupGridAttr(cell);
		break;	
	case 6:
		$(cell).file(function(inp) {
			inp.id = inp.name = 'myFileInput';
			
			/* Upload file by ajax */
			disabledLayout();
			$.ajaxFileUpload({
				url : sz_BaseUrl + '/user/field/uploadpicture',
				secureuri : false,
				fileElementId : inp,
				dataType : 'json',
				success : function(data, status) {
					/* Upload file successfully */
					if (data.error) {
						qssAjax.alert(data.message);
						enabledLayout();
					} else {
						$(cell).attr('value',data.image);
						$(cell).find('img').remove();
						var ctrl = $('<img/>').attr('src','/user/field/tmp?file='+data.image)
												.attr('width',$(cell).attr('dwidth'));
						$(cell).append(ctrl);
						enabledLayout();
					}
				},
				error : function(data, status, e) {
					/* If upload error */
					qssAjax.alert(e);
				}
			});
		});
		break;
	case 7:
		$(cell).file(function(inp) {
			inp.id = inp.name = 'myFileInput';
			
			/* Upload file by ajax */
			disabledLayout();
			$.ajaxFileUpload({
				url : sz_BaseUrl + '/user/field/uploadfile',
				secureuri : false,
				fileElementId : inp,
				dataType : 'json',
				success : function(data, status) {
					/* Upload file successfully */
					if (data.error) {
						qssAjax.alert(data.message);
						enabledLayout();
					} else {
						$(cell).attr('value',data.image);
						$(cell).find('a').remove();
						$(cell).text('');
						var ctrl = $('<a/>').attr('target','new')
												.attr('href','/user/field/tmp?file='+data.image);
						$(ctrl).text('tải về');
						$(cell).append(ctrl);
						enabledLayout();
					}
				},
				error : function(data, status, e) {
					/* If upload error */
					qssAjax.alert(e);
				}
			});
		});
	break;
	}
}
function displayCell(cell){
	if($(cell).hasClass('nocount')){
		return;
	}
	if ($("#ui-datepicker-div").is(":visible") && $("#ui-datepicker-div").html() != "") {
		$(cell).find('input').datepicker('hide');
	}
	if($(cell).is('[readonly]') || $(cell).attr('inputtype') == 7 || $(cell).attr('inputtype') == 6){
		return;
	}
	var text = $(cell).find('textarea').val();
	var val = $(cell).find('select option:selected').val();
	if($(cell).attr('inputtype') == 3 || $(cell).attr('inputtype') == 5){
		if($(cell).find('select').length){
			text = $(cell).find('select option:selected').text();
		}
		else{
			return;
		}
	}
	var check = '';
	if(!text && $(cell).attr('inputtype') != 9){
		text = $(cell).find('input').val();
	}	
	if($(cell).attr('inputtype') == 9){	
		if($(cell).find('input').attr("checked")){
			check = 1;
			}
		else{
			check = 0;
			}
	}
	if($(cell).attr('inputtype') == 3 || $(cell).attr('inputtype') == 5){
		$(cell).attr('value',val);
	}
	else if($(cell).attr('inputtype') != 4){
		$(cell).attr('value',(check != '')?check:((text || $(cell).attr('inputtype') == 11 || $(cell).attr('inputtype') == 12)?text:''));
	}
}
function getCell(cell){
	if($(cell).hasClass('nocount')){
		return false;
	}
	if($(cell).is('[readonly]') || $(cell).attr('inputtype') == 7 || $(cell).attr('inputtype') == 6){
		return false;
	}
	var text = $(cell).find('textarea').val();
	var val = $(cell).find('select option:selected').val();
	if($(cell).attr('inputtype') == 3 || $(cell).attr('inputtype') == 5){
		if($(cell).find('select').length == 0){
			return false;
		}
	}
	var check = '';
	if(!text && $(cell).attr('inputtype') != 9){
		text = $(cell).find('input').val();
	}	
	if($(cell).attr('inputtype') == 9){	
		if($(cell).find('input').attr("checked")){
			check = 1;
			}
		else{
			check = 0;
			}
	}
	if($(cell).attr('inputtype') == 3 || $(cell).attr('inputtype') == 5){
		return val;
	}
	else if($(cell).attr('inputtype') == 4){
		return $(cell).attr('value');
	}
	else {
		return (check != '')?check:((text || $(cell).attr('inputtype') == 11 || $(cell).attr('inputtype') == 12)?text:'');
	}
}
function save(back){
	//esc = false;
	edit = false;
	var save = false;
	$('.grid_edit').find('tr').each(function(){
		if($(this).attr('edit') == 1){
			saveRow(this);
			save = true;
		}
	});
	if(!edit && !back){
		var tr = $('.grid_edit').find('tr:last');
		rowObjectSearch($(tr).attr('ifid'),$(tr).attr('deptid'),$(tr).attr('objid'),gotoioid);
	}
}
function saveRow(tr)
{
	gotoioid = 0;
	displayRow(tr);
	var data = {ifid:$(tr).attr('ifid'),deptid:$(tr).attr('deptid'),objid:$(tr).attr('objid'),ioid:$(tr).attr('id')};
	$(tr).find('td').each(function(){
		data[$(this).attr('name')] = $(this).attr('value');
		}
	);
	var url = sz_BaseUrl + '/user/object/save';
	return qssAjax.call(url, data, function(jreturn) {
		$(tr).attr('edit',0);
		if(jreturn.status !== undefined){
			//$(tr).attr('id',jreturn.status);
			gotoioid = jreturn.status;
		}
		if(jreturn.message != ''){
			qssAjax.alert(jreturn.message);
		}
	}, function(jreturn) {
		//esc = true;
		edit=true;
		qssAjax.alert(jreturn.message,function(){
			var rcell = $(tr).find('td[name="'+jreturn.status+'"]');
			if($(rcell).length){
				$(rcell).addClass('required');
				$(rcell).find('textarea').focus();
				$(rcell).find('input').focus();
				$(rcell).find('select').focus();
			}
		});
	},false);
}
function refresh(tr)
{
	//displayRow(tr);
	var data = {ifid:$(tr).attr('ifid'),deptid:$(tr).attr('deptid'),objid:$(tr).attr('objid'),ioid:$(tr).attr('id')};
	/*$(tr).find('td').each(function(){
		data[$(this).attr('name')] = $(this).attr('value');
		}
	);*/
	data = getRow(tr,data);
	var url = sz_BaseUrl + '/user/object/reload';
	qssAjax.call(url, data, function(jreturn) {
		self = tr;
		$.each(jreturn, function(i, item) {
			tr = self;
			var loadcell = $(tr).find('td[name="'+i+'"]');
			if(loadcell.length != 0){//item.value != null || item.readonly
				if(parseInt($(loadcell).attr('inputtype')) == 3 
							|| parseInt($(loadcell).attr('inputtype')) == 4 
							|| parseInt($(loadcell).attr('inputtype')) == 11 
							|| parseInt($(loadcell).attr('inputtype')) == 12){
					if(typeof item.value === 'string'){
						var parts = item.value.split(',');
					}
				}
				$(loadcell).attr('value',item.value);
				if(item.readonly){
					$(loadcell).attr('readonly','');
					$(loadcell).html(item.display);//them vào
				}
				else{
					if(typeof $(loadcell).attr('readonly') !== typeof undefined){
						$(loadcell).removeAttr('readonly');
						editCell(loadcell);
					}
				}
			}
			if(typeof $(loadcell).attr('readonly') === typeof undefined){
				switch(parseInt($(loadcell).attr('inputtype')) ){
					case 1:
					case 2:
						$(loadcell).find('textarea').val(item.display);
						break;
					case 9:
						//đã set value bên trên
						break;
					case 8:
						$(loadcell).find('input').val(item.display);
						break;
					case 5:
						$(loadcell).find('input').val(item.value);
						break;	
					case 3:
						var ctrl = $(loadcell).find('select');
						var url = sz_BaseUrl + '/user/field/option';
						var tr = $(loadcell).parent();
						var data = {fieldid:$(loadcell).attr('id'),selected:$(loadcell).attr('value')};
						data['ifid'] = $(tr).attr('ifid');
						data['deptid'] = $(tr).attr('deptid');
						data['objid'] = $(tr).attr('objid');
						data['ioid'] = $(tr).attr('id');
						$(tr).find('td').each(function(){
							data[$(this).attr('name')] = $(this).attr('value');
						});
						return qssAjax.getHtml(url, data, function(jreturn) {
							$(loadcell).find('#combo_' + $(loadcell).attr('id')).html(jreturn);
						});
						break;
					case 4:
						var width = $(loadcell).width() - 4;
						var height = $(loadcell).height() - 4;
						var val = $(loadcell).find('input').val();
						var focus = $(loadcell).find('input').is(':focus');
						$(loadcell).empty();
						var ctrl = $('<input/>').addClass('lookup');
						var parent = $('<div/>').addClass('tag-div');
						$(parent).append(ctrl);
						$(loadcell).append(parent);
						$(ctrl).attr('id','lookup_' + $(loadcell).attr('id')+'_'+$(loadcell).parent().index())
													.css('height',height)
													.css('width',width-2);
						
						if(focus){
							$(ctrl).focus();
							$(ctrl).val(val);
						}
						else{
							$(ctrl).val(item.display);
						}
						//$(loadcell).find('textarea').val(item.display);
						var tr = $(loadcell).parent();
						var data = {ifid:$(tr).attr('ifid'),deptid:$(tr).attr('deptid'),objid:$(tr).attr('objid'),ioid:$(tr).attr('id')};
						$(tr).find('td').each(function(){
							data[$(this).attr('name')] = $(this).attr('value');
						});
						data = $.param(data);
						$(function () {
							var url = sz_BaseUrl + '/user/field/tag?fieldid='+$(loadcell).attr('id');
							$(loadcell).find('#lookup_' + $(loadcell).attr('id')+'_'+$(loadcell).parent().index()).tagSuggest({
						        url: url,
						        data: data,
						        icon: false,
						        delay: 500,
						        separator : '*',
						        tagContainer: 'div',
						        callback: selecting,
						        element: '#lookup_' + $(loadcell).attr('id')+'_'+$(loadcell).parent().index()
						    });
						});
						break;
				}
			}
		  });
		//editRow(tr);
	}, function(jreturn) {
		qssAjax.alert(jreturn.message);
	});
}
function popupSelect(ele) {
	esc = false;
	refelement = ele;
	var fieldid = $(refelement).attr('reffieldid');
	reffieldid = fieldid;
	isrefresh = $(refelement).attr('refresh');
	var url = sz_BaseUrl + '/user/form/select';
	var data = {
		fieldid : $(refelement).attr('id')
	};
	qssAjax.getHtml(url, data, function(jreturn) {
		$('#qss_combo').html(jreturn);
		$('#qss_combo').dialog({close: function(event,ui) {
			select = null;
			//esc = false;
		}});
		if(select == null && $('#selecttable').length){
			select = $('#selecttable').find('tr').eq(1)[0];
		}
		selectCLK(select);
	});
}
function popupGridAttr(ele) {
	var tr = $(ele).parent()[0];
	displayRow(tr);
	esc = false;
	refelement = ele;
	var fieldid = $(refelement).attr('reffieldid');
	reffieldid = fieldid;
	isrefresh = $(refelement).attr('refresh');
	var url = sz_BaseUrl + '/extra/element/attr';
	var data = {ifid:$(tr).attr('ifid'),
				deptid:$(tr).attr('deptid'),
				objid:$(tr).attr('objid'),
				ioid:$(tr).attr('id'),
				fieldid : $(refelement).attr('id')};
	$(tr).find('td').each(function(){
			data[$(this).attr('name')] = $(this).attr('value');
		}
	);
	editRow(ele);
	qssAjax.getHtml(url, data, function(jreturn) {
		$('#qss_combo').html(jreturn);
		$('#qss_combo').dialog({ width: 500,height:500 });
	});
}
function selectTrace() {
	if (select == null) {
		return;
	}
	$(refelement).attr('value',$(select).attr('ioid'));
	$(refelement).text($(select).attr('vdisplay'));
	$('#qss_combo').html('');
	$('#qss_combo').dialog('close');
	if (isrefresh == 1) {
		refresh(row);
	}
	select = null;
}
function selecting(workingTags,id,element)
{
	$(element).val(workingTags);
	var cell = $(element).parent().parent();
	var old = $(cell).attr('value');
	if(id)
		$(cell).attr('value',id);
	else
		$(cell).attr('value','0');
	if ($(cell).attr('refresh') == 1 && id != old) {
		refresh(row);
	}
	$(element).closest('tr').change();
	$(element).change();
	$(element).blur();
	$(element).removeClass('bgpink');
	$(element).focus();
}
</script>